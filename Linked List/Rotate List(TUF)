class Solution {
    public ListNode rotateRight(ListNode head, int k) {

        if (head == null || k == 0) return head;
        
        ListNode tail = head;
        int len = 1;
        
        while (tail.next != null) {
            tail = tail.next;
            len++;
        }
        
        if (k % len == 0) return head;

        k = k % len;
        
        // Attach the tail to the head
        tail.next = head;
        
        ListNode newLastNode = findNthNode(head, len - k);
        head = newLastNode.next;
        newLastNode.next = null;
        
        return head;
    } 
    private static ListNode findNthNode(ListNode temp, int k) {
        int cnt = 1;
        while (temp != null) {
            if (cnt == k) return temp;
            cnt++;
            temp = temp.next;
        }
        return temp;
    }
}

/*

Explanation:

https://takeuforward.org/data-structure/rotate-a-linked-list/

*/
